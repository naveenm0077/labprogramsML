from sklearn import metrics
from sklearn.naive_bayes import MultinomialNB
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
import pandas as pd
msg = pd.read_csv('laba6.txt', names=['message', 'label'])
print"dimensions of dataset", msg.shape
msg['labelnum'] = msg.label.map({'pos': 1, 'neg': 0})
x = msg.message
y = msg.labelnum
print(x)
print(y)
xtrain, xtest, ytrain, ytest = train_test_split(x, y)
print(xtest.shape)
print(xtrain.shape)
print(ytest.shape)
print(ytrain.shape)
count_vect = CountVectorizer()
xtrain_dtm = count_vect.fit_transform(xtrain)
xtest_dtm = count_vect.transform(xtest)
print(count_vect.get_feature_names())
df = pd.DataFrame(xtrain_dtm.toarray(), columns=count_vect.get_feature_names())
print(df)
print(xtrain_dtm)
df = MultinomialNB().fit(xtrain_dtm, ytrain)
predicted = df.predict(xtest_dtm)
print'accuracy metrics'
print'accuracy of the classifier is', metrics.accuracy_score(ytest, predicted)
print'confusion matrix'
print metrics.confusion_matrix(ytest, predicted)
print'recall and precision'
print metrics.precision_score(ytest, predicted)
